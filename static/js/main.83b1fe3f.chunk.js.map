{"version":3,"sources":["ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","tableData","setTableData","addTableData","setAddedTableData","editData","setEditData","rows","setRows","data","values","onChange","value","useEffect","window","localStorage","getItem","length","JSON","parse","handleEnter","event","keyCode","index","Array","prototype","indexOf","call","document","querySelectorAll","target","focus","preventDefault","Paper","variant","square","style","width","marginLeft","marginRight","backgroundColor","className","margin","Typography","component","marginBottom","TextField","id","label","onKeyDown","e","Button","size","onClick","push","setItem","stringify","disabled","TableContainer","Table","TableBody","map","row","TableRow","TableCell","align","fontWeight","filter","item","removeItem","deleteData","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4SAee,SAASA,IAAO,IAAD,IAC5B,EAAkCC,IAAMC,SAAS,IAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CH,IAAMC,SAAS,IAAzD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCL,IAAMC,UAAS,GAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwBP,IAAMC,SAAS,IAAvC,mBAAOO,EAAP,KAAaC,EAAb,KACIC,EAAO,GACPC,EAAS,GACPC,EAAW,SAACC,GAChBV,EAAaU,GACXP,GAAYG,EAAQI,IAExBb,IAAMc,WAAU,YACdJ,EAAOK,OAAOC,aAAaC,QAAQ,oBAC3BP,EAAKQ,SACZR,EAAOS,KAAKC,MAAMV,GACnBL,EAAkBK,MACjB,IAwBHA,EAAOK,OAAOC,aAAaC,QAAQ,kBACnCP,EAAOS,KAAKC,MAAMV,GAClB,IAAMW,EAAc,SAACC,GACnB,GAAsB,KAAlBA,EAAMC,QAAgB,CACxB,IAAMC,EAAQC,MAAMC,UAAUC,QAAQC,KACpCC,SAASC,iBAAiB,SAC1BR,EAAMS,QAEJF,SAASC,iBAAiB,SAASZ,OAASM,IAC9CK,SAASC,iBAAiB,SAASN,EAAQ,GAAGQ,QAC9CV,EAAMW,oBAIZ,OACE,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWC,QAAM,EAACC,MAAO,CAAEC,MAAO,MAAOC,WAAY,OAAQC,YAAa,OAAQC,gBAAiB,WAAlH,SACE,sBAAKC,UAAU,MAAML,MAAO,CAAEM,OAAQ,MAAtC,UACE,cAACC,EAAA,EAAD,CAAYT,QAAQ,KAAKU,UAAU,KAAKR,MAAO,CAAES,aAAc,MAA/D,wBAGA,cAACC,EAAA,GAAD,GACEC,GAAG,oBACHC,MAAM,kBACNpC,MAAOX,EACPgD,UAAW,SAACC,GAAD,OAAO9B,EAAY8B,KAJhC,mBAKK,QALL,0BAMY,SAACA,GAAD,OAAOvC,EAASuC,EAAEpB,OAAOlB,UANrC,IAQA,cAACuC,EAAA,EAAD,CAAQJ,GAAG,OAAOE,UAAW,SAACC,GAAD,OAAO9B,EAAY8B,IAAId,MAAO,CAAEE,WAAY,MACvEJ,QAAQ,YAAYkB,KAAK,SAASC,QApD1B,WACd3C,EAAQP,EAAamD,KAAKrD,GAC1Ba,OAAOC,aAAawC,QAAQ,iBAAkBrC,KAAKsC,UAAU9C,IAC7DR,EAAa,IACbI,GAAY,IAgD8CmD,UAAWxD,EADjE,iBAIA,cAACyD,EAAA,EAAD,WACIrD,GACA,mCACE,cAACsD,EAAA,EAAD,CACE,kBAAgB,aAChBP,KAAK,SACL,aAAW,iBAHb,SAKE,cAACQ,EAAA,EAAD,UACGzD,GAAgBA,EACd0D,KAAI,SAACC,EAAKvC,GAAN,OACH,eAACwC,EAAA,EAAD,YACI1D,GACA,cAAC2D,EAAA,EAAD,CACEC,MAAM,SACN7B,MAAO,CAAE8B,WAAY,QAFvB,SAIGJ,IAIL,eAACE,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,CACEC,MAAM,SACN7B,MAAO,CAAE8B,WAAY,QAFvB,UAIE,cAACf,EAAA,EAAD,CACEjB,QAAQ,YACRkB,KAAK,SACLL,GAAG,OACHE,UAAW,SAACC,GAAD,OAAO9B,EAAY8B,IAE9BG,QAAS,kBAjFlB,SAACS,GAClB1D,EAAkBD,EAAagE,QAAO,SAACC,GAAD,OAAUA,IAASN,MAC5DhD,OAAOC,aAAasD,WAAWP,GA+EaQ,CAAWR,IAN5B,oBASU,OAEZ,cAACE,EAAA,EAAD,CACEC,MAAM,SACN7B,MAAO,CAAE8B,WAAY,QAFvB,SAIE,cAACf,EAAA,EAAD,CACEjB,QAAQ,YACRkB,KAAK,SACLC,QAAS,kBAzFxB,SAACS,GACZxD,GAAY,GACZJ,EAAa4D,GACb1D,EAAkBD,EAAagE,QAAO,SAACC,GAAD,OAAUA,IAASN,MAsFhBS,CAAKT,IACpBb,UAAW,SAACC,GAAD,OAAO9B,EAAY8B,IAC9BH,GAAG,OALL,yBA9BSe,cAiD5BzD,GACC,qCACE,cAAC2D,EAAA,EAAD,CAAWC,MAAM,SAAS7B,MAAO,CAAE8B,WAAY,QAA/C,SAEE,cAACpB,EAAA,GAAD,GACEC,GAAG,oBACHC,MAAM,YACNpC,MAAOX,GAHT,mBAIK,QAJL,2BAKa,SAACiD,GAAD,OAAO9B,EAAY8B,MALhC,0BAOY,SAACA,GAAD,OAAOvC,EAASuC,EAAEpB,OAAOlB,UAPrC,MAUF,cAACoD,EAAA,EAAD,CAAWC,MAAM,SAAS7B,MAAO,CAAE8B,WAAY,QAA/C,SAEE,cAACf,EAAA,EAAD,CACEjB,QAAQ,YACRkB,KAAK,SACLC,QAtHD,SAACS,GACZxD,GAAY,GACZI,EAASP,EAAamD,KAAK/C,GAC3BO,OAAOC,aAAawC,QAAQ,iBAAkBrC,KAAKsC,UAAUrD,IAC7DD,EAAa,IACbI,GAAY,IA8GF,4B,MCvJCR,MATf,WACE,OACE,qBAAK2C,UAAU,MAAf,SAEF,cAAC,EAAD,OCKa+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvD,SAASwD,eAAe,SAM1BZ,M","file":"static/js/main.83b1fe3f.chunk.js","sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable react/jsx-no-duplicate-props */\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\n\nexport default function App() {\n  const [tableData, setTableData] = React.useState(\"\");\n  const [addTableData, setAddedTableData] = React.useState([]);\n  const [editData, setEditData] = React.useState(false);\n  const [rows, setRows] = React.useState('');\n  let data = [];\n  let values = [];\n  const onChange = (value) => {\n    setTableData(value);\n    { editData && setRows(value) }\n  };\n  React.useEffect(() => {\n    data = window.localStorage.getItem('tableDataValue');\n\tif(data && data.length)\n{    data = JSON.parse(data)\n    setAddedTableData(data);}\n  }, [])\n  const addData = () => {\n    values= addTableData.push(tableData);\n    window.localStorage.setItem(\"tableDataValue\", JSON.stringify(values));\n    setTableData(\"\");\n    setEditData(false);\n  };\n  const deleteData = (row) => {\n    setAddedTableData(addTableData.filter((item) => item !== row));\n\twindow.localStorage.removeItem(row);\n };\n  const edit = (row) => {\n    setEditData(true);\n    setTableData(row);\n    setAddedTableData(addTableData.filter((item) => item !== row));\n\n  };\n  const save = (row) => {\n    setEditData(true);\n    values = addTableData.push(rows);\n    window.localStorage.setItem(\"tableDataValue\", JSON.stringify(addTableData));\n    setTableData('');\n    setEditData(false);\n  };\n  data = window.localStorage.getItem('tableDataValue');\n  data = JSON.parse(data)\n  const handleEnter = (event) => {\n    if (event.keyCode === 13) {\n      const index = Array.prototype.indexOf.call(\n        document.querySelectorAll(\"#todo\"),\n        event.target\n      );\n      if (document.querySelectorAll(\"#todo\").length > index) {\n        document.querySelectorAll(\"#todo\")[index + 1].focus();\n        event.preventDefault();\n      }\n    }\n  };\n  return (\n    <Paper variant=\"outlined\" square style={{ width: '30%', marginLeft: 'auto', marginRight: 'auto', backgroundColor: '#f0f7ff' }}>\n      <div className=\"App\" style={{ margin: '2%' }}>\n        <Typography variant=\"h4\" component=\"h2\" style={{ marginBottom: '6%' }}>\n          To Do List\n        </Typography>\n        <TextField\n          id=\"outlined-disabled\"\n          label=\"Enter Your Task\"\n          value={tableData}\n          onKeyDown={(e) => handleEnter(e)}\n          id=\"todo\"\n          onChange={(e) => onChange(e.target.value)}\n        />\n        <Button id=\"todo\" onKeyDown={(e) => handleEnter(e)} style={{ marginLeft: '5%' }}\n          variant=\"contained\" size=\"medium\" onClick={addData} disabled={!tableData}>\n          ADD\n        </Button>\n        <TableContainer>\n          {!editData && (\n            <>\n              <Table\n                aria-labelledby=\"tableTitle\"\n                size=\"medium\"\n                aria-label=\"enhanced table\"\n              >\n                <TableBody>\n                  {addTableData && addTableData\n                    .map((row, index) => (\n                      <TableRow key={row}>\n                        {!editData && (\n                          <TableCell\n                            align=\"center\"\n                            style={{ fontWeight: \"bold\" }}\n                          >\n                            {row}\n                          </TableCell>\n                        )}\n\n                        <TableCell>\n                          <TableCell\n                            align=\"center\"\n                            style={{ fontWeight: \"bold\" }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              size=\"medium\"\n                              id=\"todo\"\n                              onKeyDown={(e) => handleEnter(e)}\n\n                              onClick={() => deleteData(row)}\n                            >\n                              Delete\n                            </Button>{\" \"}\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            style={{ fontWeight: \"bold\" }}\n                          >\n                            <Button\n                              variant=\"contained\"\n                              size=\"medium\"\n                              onClick={() => edit(row)}\n                              onKeyDown={(e) => handleEnter(e)}\n                              id=\"todo\"\n                            >\n                              Edit\n                            </Button>\n                          </TableCell>\n                        </TableCell>\n\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </>\n          )}\n        </TableContainer>\n        {editData && (\n          <>\n            <TableCell align=\"center\" style={{ fontWeight: \"bold\" }}>\n\n              <TextField\n                id=\"outlined-disabled\"\n                label=\"Edit Task\"\n                value={tableData}\n                id=\"todo\"\n                onKeyDown={(e) => handleEnter(e)}\n\n                onChange={(e) => onChange(e.target.value)}\n              />\n            </TableCell>\n            <TableCell align=\"center\" style={{ fontWeight: \"bold\" }}>\n\n              <Button\n                variant=\"contained\"\n                size=\"medium\"\n                onClick={save}\n\n              >\n                Save\n              </Button>\n            </TableCell>\n          </>\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import ToDoList from './ToDoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\t <ToDoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}